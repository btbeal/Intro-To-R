<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Intro to R</title>
    <link>https://zealous-hawking-ce0a3d.netlify.app/</link>
    <description>Recent content on Intro to R</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 06 Jul 2020 21:13:14 -0500</lastBuildDate>
    
	<atom:link href="https://zealous-hawking-ce0a3d.netlify.app/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Lesson 0 - Getting Setup</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/modules/0_gettingstarted/</link>
      <pubDate>Mon, 06 Jul 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/modules/0_gettingstarted/</guid>
      <description>Downloading R To use R, we first need to hvae it installed. Doing that is fairly simple. Just go to this website and follow the instructions! Once you have the language itself installed, you should also download RStudio, which is commonly referred to as an IDE (integrated development environment). That can be done here.
Pick the free version.
 RStudio RStudio provides the luxury of keeping track of variables/data/packages and provides a lot moe flexibility in general, which you will quickly see.</description>
    </item>
    
    <item>
      <title>Lesson 1 - intro to R</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/modules/1_basics/</link>
      <pubDate>Sat, 04 Jul 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/modules/1_basics/</guid>
      <description>Welcome to The University of Washington and your crash course on R. Note that this class will not be incredibly robust (we have three days) but it will aim to provide you the tools necessary to do well in your stats classes and beyond. Futher, I believe several of you will take a semester long course in R. You&#39;ll be ahead of that game but will go into more depth during that class.</description>
    </item>
    
    <item>
      <title>Lesson 2 - Indexing and Tidyverse</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/modules/2_indexingtidyverse/</link>
      <pubDate>Fri, 03 Jul 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/modules/2_indexingtidyverse/</guid>
      <description>In the previous lesson we covered the very basics of R. We discussed that R can be a fancy calculator, interpret logical arguments, and some fun facts sprinkled throughout. In addition, we covered basic data types and structures. Alone, this is good information to know... and is indeed the very bare bones introduction... but we are here to look at data - to manipulate data in a meaningful way. The first step towards data exploration is learning how to find values in a data set.</description>
    </item>
    
    <item>
      <title>Lesson 2.5 - R Graphics Tutorial</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/modules/rgraphicstutorial/</link>
      <pubDate>Thu, 02 Jul 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/modules/rgraphicstutorial/</guid>
      <description>For this lesson, we&#39;re going to use the gapminder data, which can be found in its original form here. If you&#39;re reading this and not attending the class, I would highly encourage you to check out the website! The late Hans Rosling was a brilliant guy and his work, followed up by children, is worth digging through.
The main purpose of this exercise is to learn how to graph your data; however, we first need to understand the (subjectively) best format for data, tidy data.</description>
    </item>
    
    <item>
      <title>Lesson 3 - Strings and Dates</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/modules/3_stringsndates/</link>
      <pubDate>Wed, 01 Jul 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/modules/3_stringsndates/</guid>
      <description>Some of the most common data-related issues for those new to healthcare research (probably any research) revolve around string and date manipulation. Fortunately for us, R has some really incredible packages to help us deal with them. Like anything in R, it can be done in base R. Though, you&#39;ll never use base R again for string/date manipulation so... i&#39;m not going to cover it here. Again, this is meant to be a broad overview of both of the packages so that you can go back to them when you&#39;re stuck!</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/about/</link>
      <pubDate>Tue, 30 Jun 2020 21:48:51 -0700</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/about/</guid>
      <description>About the Website This website was built for the University of Washington&#39;s incoming Comparative Health Outcomes, Policy, and Economics Institute (CHOICE) PhD and MS students. The goal of this website is to provide an overview on the core of R programming to jumpstart their ability to use data in a meaningful way.
The workshop, as it stands, is meant to span three days. So, the tutorials and problem sets are meant to cover basics.</description>
    </item>
    
    <item>
      <title>Lesson 4 - Functions and Loops in R</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/modules/4_functions/</link>
      <pubDate>Tue, 30 Jun 2020 21:13:14 -0200</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/modules/4_functions/</guid>
      <description>Now that you&#39;ve mastered the basics of R, and data manipulation with dplyr, you&#39;re ready for an introduction to functions and loops. Hopefully, the time you&#39;ll need for loops is minimal since dplyer has solved some grouping issues for us. But, you should still learn them just in case (and so you can understand them when reading others&#39; code).
Here I want to cover:
Functions and if statements Loops  Functions and if statements Functions are a key part of R.</description>
    </item>
    
    <item>
      <title>Problem Set 1</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/problemsets/set1/</link>
      <pubDate>Mon, 29 Jun 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/problemsets/set1/</guid>
      <description>This problem set will require knowledge of both Lesson 1 and Lesson 2. If you haven&#39;t read over those, go ahead and do that then come back. Or, if you think you got it, carry on!
Basic Math and Logic with R Store the value 18 in a variable x and the value 23 in the varialbe r_is_cool.
Write an simple expression in your console that adds those two variables Write an expression to test whether or not x is greater than or equal to r_is_cool Write an expression to test whether x is less than r_is_cool AND x + 10 is greater than r_is_cool What is the sum of the following vector: c(TRUE, TRUE, FALSE, TRUE)?</description>
    </item>
    
    <item>
      <title>Problem Set 2</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/problemsets/set2/</link>
      <pubDate>Mon, 29 Jun 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/problemsets/set2/</guid>
      <description>For problem set two, we will be building on modules 0 - 3 and testing your skills of tidyverse, dates, strings, and plotting. So, if you are unfamiliar with those, take a look at the modules and come back.
The entirety of this problem set will build off of the COVID Apple Mobility data. This data shows the percent of daily direction requests sent to the Apple servers for thousands of local regions by different types of transportation (walking, biking, and driving).</description>
    </item>
    
    <item>
      <title>Solutions for PS 1</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/solns/1_soln/</link>
      <pubDate>Mon, 29 Jun 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/solns/1_soln/</guid>
      <description>Basic Math and Logic with R # ---- SETUP x &amp;lt;- 18 r_is_cool &amp;lt;- 23 # 1 x + r_is_cool #2 x &amp;gt;= r_is_cool #3 x &amp;lt; r_is_cool &amp;amp; x + 10 &amp;gt; r_is_cool #4 sum(c(TRUE, TRUE, FALSE, TRUE))  Indexing Vectors # ---- SETUP what_the_vec &amp;lt;- c(seq.int(from = 8, to = 72, by = 2)) # 1 what_the_vec[14] # 2 new_vec &amp;lt;- what_the_vec[c(2, 8, 20)] # 3 new_vec[2] &amp;lt; new_vec[1] # 4 new_vec2 &amp;lt;- new_vec[-1] Indexing Data Frames Section 1 # 1 dim(iris) # --- OR ---- str(iris) # str gives more info.</description>
    </item>
    
    <item>
      <title>Solutions for PS 2</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/solns/2_soln/</link>
      <pubDate>Sun, 28 Jun 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/solns/2_soln/</guid>
      <description>Initial Setup # load relevant libraries library(tidyverse) library(lubridate) # read in data (this step looks slightly different for me) mobility &amp;lt;- read.csv(&amp;quot;../data/applemobilitytrends.csv&amp;quot;) # view the structure str(mobility)  Question 1 # Since we are tidyverse experts, we can answer all these questions in one try: mobility_CLT &amp;lt;- mobility %&amp;gt;% # step 1 filter(region == &amp;quot;Charlotte&amp;quot;, sub.region == &amp;quot;North Carolina&amp;quot;, # step 3 transportation_type == &amp;quot;driving&amp;quot;) %&amp;gt;% # step 4 pivot_longer(cols = starts_with(&amp;quot;X&amp;quot;), names_to = &amp;quot;date&amp;quot;, values_to = &amp;quot;volume&amp;quot;) %&amp;gt;% # step 5 mutate(date = str_replace_all(date, &amp;quot;[Xx.</description>
    </item>
    
    <item>
      <title>Solutions for PS 3</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/solns/3_soln/</link>
      <pubDate>Sun, 28 Jun 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/solns/3_soln/</guid>
      <description>Function Concepts Answer 1: The general structure of a function if function(~arguments~){do something to arguments}. Of course, that is an informal definition so anything resembling that counts!
Answer 2: Neither the second or third option will run.
Answer 3: The two mentioned produce errors because there is no specified y value. The x value is pre-specified and so as long as we tell R what the y value should be, it will use the default x.</description>
    </item>
    
    <item>
      <title>Problem Set 3</title>
      <link>https://zealous-hawking-ce0a3d.netlify.app/problemsets/set3/</link>
      <pubDate>Sat, 27 Jun 2020 21:13:14 -0500</pubDate>
      
      <guid>https://zealous-hawking-ce0a3d.netlify.app/problemsets/set3/</guid>
      <description>This problem set will be the last of them. It will build on the 4th module. So, if you&#39;ve not checked it out, go ahead and do that! We will be building on a lot of components from the other modules as well.
Function Concepts Here, I just want to touch on the general concepts of functions.
What is the general structure of a function? Consider this function: my_function &amp;lt;- function(x = 2, y){ x + 2*y}.</description>
    </item>
    
  </channel>
</rss>